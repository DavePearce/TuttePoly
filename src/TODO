Things to do!
=============
* Eliminate need to retree based on Gary's idea.
* Adde support for matching multi-trees and multi-loons since we can terminate immediately with them.
* Investigate the multi-edge matching idea, where number of multiple edges is not important.
* Removing "lines" by checking that one of their vertices is not on the spanning tree.  Adjust spanning tree to pick "bushy" vertices.
* Add support for cache replacement policies and garbage collection
* Add Gary's small graph isomorphism tests
* Add support for decent stats reporting [breakdown of bucket length, proportion of memory used by graphs vs polynomial]

Alternative Implementations
---------------------------
* Add vecmultiset option for adjacency list
* Add alternative(s) to adjacency list (i.e. Gary's optimised for contracting)
* Add alternative(s) to simple poly for representing polynomials

Optimisations
-------------
* Fixup BIGUINT so it packs (i.e. removes trailing zeros) automatically
* Threshold support
* Optimise space used by nauty graphs
* Optimise cache lookup policies (i.e. don't convert to nauty graph
  unless really need to, possibly by using bins for different size graph) 
  Could use things like min-max degree to help compare graphs?
* Optimise updating of canonical graph to prevent recomputing every time?
* Optimise of hashing policy?
* Explore nauty options?
* Search for multiple edge of tree edge for removal as this means spaning tree is unchanged.




